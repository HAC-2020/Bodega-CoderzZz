# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from speech.proto_speech import orderinfo2user_pb2 as speech_dot_proto__speech_dot_orderinfo2user__pb2


class OrderInfo2UserStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendOrderDetails = channel.unary_stream(
        '/OrderInfo2User/SendOrderDetails',
        request_serializer=speech_dot_proto__speech_dot_orderinfo2user__pb2.Dummy.SerializeToString,
        response_deserializer=speech_dot_proto__speech_dot_orderinfo2user__pb2.OrderDetails.FromString,
        )


class OrderInfo2UserServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SendOrderDetails(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_OrderInfo2UserServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendOrderDetails': grpc.unary_stream_rpc_method_handler(
          servicer.SendOrderDetails,
          request_deserializer=speech_dot_proto__speech_dot_orderinfo2user__pb2.Dummy.FromString,
          response_serializer=speech_dot_proto__speech_dot_orderinfo2user__pb2.OrderDetails.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'OrderInfo2User', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
